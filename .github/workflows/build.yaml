on:
  pull_request:
    branches:
      - master
      - develop
  push:    
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   node_version: 10, architecture: 'x64', pltf: 'mac',   in_ext: 'dmg', installer: 'electron-installer-dmg@latest'}
          - {os: windows-latest, node_version: 10, architecture: 'x64', pltf: 'win',   in_ext: 'msi', installer: 'electron-wix-msi@latest'}
          - {os: ubuntu-latest,  node_version: 10, architecture: 'x64', pltf: 'linux', in_ext: 'deb', installer: 'electron-installer-debian@latest'}
    env:
      PLTF: ${{ matrix.config.pltf }}
      INSTALL_PKG: ${{ matrix.config.installer }}

    name: Node ${{ matrix.config.node_version }} - ${{ matrix.config.architecture }} on ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.config.node_version }}
          architecture: ${{ matrix.config.architecture }}
      #- run: npm install -g npm@latest
      - run: npm install @angular/cli
      - run: npm install --include=dev
      - run: npm install @types/node@latest
      - run: cd frontend
      - run: npm install --include=dev
      - run: npm install @types/node@latest
      - run: cd ..
      - run: npm install electron@latest
      - run: npm install ${INSTALL_PKG}

      - name: Build
        if: runner.os != 'Windows'
        run: npm run build-${PLTF}
        shell: bash

      - name: Create Certificate for Windows
        if: runner.os == 'Windows'
        run: |
          $Params = @{
            Subject           = "CN=Test Code Signing"
            Type              = "CodeSigningCert"    
            KeySpec           = "Signature"     
            KeyUsage          = "DigitalSignature"    
            FriendlyName      = "Test code signing"    
            NotAfter          = [datetime]::now.AddYears(5)    
            CertStoreLocation = 'Cert:\CurrentUser\My' }
            $TestCodeSigningCert = New-SelfSignedCertificate @Params
            #Export-Certificate -FilePath exported_cert.cer -Cert $TestCodeSigningCert
            #Import-Certificate -FilePath exported_cert.cer -CertStoreLocation Cert:\CurrentUser\Root -Confirm:$false
        shell: powershell
      
      - name: Build for Windows
        if: runner.os == 'Windows'
        run: npm run build-frontend && npm run package-win
        shell: bash

      #- name: Certificate signing for Windows (exe)
      #  if: runner.os == 'Windows'
      #  run: |
      #    Set-AuthenticodeSignature ".\dist\StoX-win32-x64\StoX.exe" @(Get-ChildItem cert:\CurrentUser\My -codesigning)[0] -TimestampServer "http://time.certum.pl"
      #  shell: powershell

      - name: Set path for candle and light
        run: echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" >> $GITHUB_PATH
        shell: bash

      - name: Create installer for Windows
        if: runner.os == 'Windows'
        run: |
          npm run installer-win

      #- name: Certificate signing for Windows (installer)
      #  if: runner.os == 'Windows'
      #  run: |
      #    Set-AuthenticodeSignature ".\dist\installers\stoxInstaller.exe" @(Get-ChildItem cert:\CurrentUser\My -codesigning)[0] -TimestampServer "http://time.certum.pl"
      #  shell: powershell

      - run: find dist/installers
        shell: bash

      - name: Renaming files for upload
        env:
          EXT: ${{ matrix.config.in_ext }}
        run: |
          export SUFFIX=$(if [ "$GITHUB_REF" = "refs/heads/develop" ]; then echo "-dev"; else echo ""; fi) 
          export FINAL_TAG=$(node -pe "require('./package.json')['name']")-$(node -pe "require('./package.json')['version']")${SUFFIX}
          mv $(ls dist/installers/*${EXT}) /dist/installers/${FINAL_TAG}.${EXT}
        shell: bash

      - run: find dist/installers
        shell: bash

      - uses: actions/upload-artifact@v2
        with:
          name: installer-${{ matrix.config.os }}-${{ env.VER  }}
          path: dist/installers/*${{ matrix.config.in_ext }}
          
      - name: Create release and upload files
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' )
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: ${{ env.FINAL_TAG }}
          name: ${{ env.FINAL_TAG }}
          artifacts: dist/installers/*${{ matrix.config.in_ext }}
          token: ${{ secrets.GITHUB_TOKEN }}